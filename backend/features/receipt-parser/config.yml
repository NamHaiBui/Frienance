# Define the tesseract language
language: eng

# Where the receipts are stored
# Receipts should be simple text files
receipts_path: "data\\txt"

results_as_json: false

# Market names roughly ordered by likelihood.
# Can contain market locations for fuzzy parsing
markets:
   LanThai:
      - lanthai
      - LanThai
      - lanThai
   Walmart:
      - walmarts
      - walmart
      - Walmarts
   Ikea:
      - ikea
      - Ikea
      - Lkea
   Spa:
      - spa
      - Spa
   WinCo:
      - winco
      - WinCo
   Trader Joe:
      - traderjoe
      - TraderJoe
      - EteaverJOE'S
      - EteaverlOE'S

# Sum keys roughly ordered by likelyhood.
sum_keys:
   - TOTAL
   - SUM
   - Total
   - total amount
   - amount due
   - amount
   - due
   - total due
   - total amount due
   - total price
   - total cost
   - totals
   - sum
   - Sums
   - Sum
   - sums
   - Total
   - Totals
   - Sub Total
   - Sales Tax
   - Total
   - Tip Suggestions

ignore_keys:
   - tax
   - tip
   - tips
   - taxable
   - non-taxable
   - subtotal
   - sub total
   


sum_format: '\d+(\.\s?|,\s?|[^a-zA-Z\d])\d{2}'

item_format: '^\s*([^\d\s]+(?:\s[^\d\s]+)*)\s+(?:\d+\s)?\d+(?:\s?[\.,]\s?\d{1,2})\b'
item_format_metro: '\b(\d+)\s+([A-Za-z\s]+?)\s+(\d+\.\d{2})\b'

# Matches dates like 19.08.15 and 19.08.2015
# date_format: '((\d{2}\.\d{2}\.\d{2,4})|(\d{2,4}\/\d{2}\/\d{2})|(\d{2}\/\d{2}\/\d{4}))'
date_format: '\b(0[1-9]|1[0-2])-([0-3]?[0-9])\b'
